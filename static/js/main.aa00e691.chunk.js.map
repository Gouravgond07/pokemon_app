{"version":3,"sources":["utils/typeColor.js","containers/pokemon.js","services/pokemon-service.js","slices/pokemon-slices.js","containers/pokemons.js","components/base-state.js","components/pokemon-evolution-chain.js","components/pokemon-about.js","containers/pokemon-detail.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["TypeColor","Pokemon","props","useState","isImageLoaded","setIsImageLoaded","className","style","backgroundColor","types","name","width","padding","map","x","index","key","src","image","alt","onLoad","visibility","BaseURL","getPokemons","a","page","size","fetch","data","json","getDataByUrl","url","getPokemonSpecies","id","pokemonSlice","createSlice","initialState","pokemons","selectedPokemon","totalCount","isError","error","isLoading","reducers","addPokemons","state","action","payload","setLoading","setSelectedPokemon","setError","setInilizeState","actions","decrement","incrementByAmount","get_evolutions","chain","chain_name","chain_level","evolves_to","lenght","evolution_details","length","push","min_level","species","map_evolution","i","j","k","ans","temp","to","level","from","createData","pokemon","pokemonSpecies","moifie_evol_chain","stats","stat","replace","power","base_stat","type","sprites","other","front_default","weight","height","abilities","ability","moves","move","egg_groups","egg_group","has_gender_differences","hatch_counter","evolution_chain","flavor_text_entries","Array","Set","filter","language","flavor_text","pokemonError","Pokemons","increasePage","pokemonsLocal","localStorage","getItem","JSON","parse","this","setPokemonInilizeState","textDecoration","onClick","Component","connect","ownProps","dispatch","getState","PokemonService","results","Promise","all","concat","count","current_state","setItem","stringify","console","log","BaseState","EvolvePokemon","color","PokemonEvolutionChain","PokemonAbout","toFixed","join","fontWeight","PokemonDetail","useDispatch","pokemonId","setPokeomId","useSelector","isLoadingState","pokemonErrorSelector","useEffect","match","params","pokemonEvolutions","evol_chain","y","evol_maped_chain_name","cretedPokemon","background","fontSize","history","paddingTop","cursor","position","zIndex","bottom","minHeight","borderTopLeftRadius","borderTopRightRadius","data-toggle","href","App","exact","path","component","configureStore","reducer","pokemonReducer","Boolean","window","location","hostname","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa00e691.chunk.js","sourcesContent":["const TypeColor = {\r\n    \"normal\": \"#b48853\",\r\n    \"fighting\": \"#28446d\",\r\n    \"flying\": \"#384764\",\r\n    \"poison\": \"#a97ba3\",\r\n    \"ground\": \"#c39943\",\r\n    \"rock\": \"#807876\",\r\n    \"bug\": \"#88c877\",\r\n    \"ghost\": \"#412f55\",\r\n    \"steel\": \"#666666\",\r\n    \"fire\": \"#fa6a6a\",\r\n    \"water\": \"#76bdfe\",\r\n    \"grass\": \"#48d0b0\",\r\n    \"electric\": \"#ffd86f\",\r\n    \"psychic\": \"#a7219c\",\r\n    \"ice\": \"#7cacd4\",\r\n    \"dragon\": \"#d88edb\",\r\n    \"dark\": \"#6c7396\",\r\n    \"fairy\": \"#e6afad\",\r\n    \"unknown\": \"#506272\",\r\n    \"shadow\": \"#2f19a2\"\r\n}\r\nexport default TypeColor","import React, { useState } from 'react';\r\nimport './pokemon.css';\r\nimport TypeColor from '../utils/typeColor';\r\n\r\nfunction Pokemon(props) {\r\n    let [isImageLoaded, setIsImageLoaded] = useState(false);\r\n\r\n    return (\r\n            <div className=\"card border pokemon-card py-2\" style={{ backgroundColor: TypeColor[props.types[0]] }}>\r\n                <div className=\"card-body pokemon-card-body\" >\r\n                    <h3 className=\"ml-2 pokemon-name text-capitalize\">{props.name} {isImageLoaded}</h3>\r\n                    <ul style={{ width: '50%', padding: '0px' }}>\r\n                        {props.types.map((x, index) => <li key={index} className=\"chip text-capitalize\">{x}</li>)}\r\n                    </ul>\r\n                    {!isImageLoaded ? <div className=\"lds-dual-ring pokemon-img\"></div> : null}\r\n                    <img className=\"pokemon-img img-fluid\"\r\n                        src={props.image}\r\n                        alt={props.name}\r\n                        onLoad={() => setIsImageLoaded(true)}\r\n                        style={{ visibility: isImageLoaded ? 'visible' : 'hidden' }} />\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon;","export const BaseURL = 'https://pokeapi.co/api/v2/'\r\n\r\n\r\nexport async function getPokemons(page=0, size=10) {\r\n    try {\r\n        const data = await fetch(BaseURL + `pokemon?offset=${page*size}&limit=${size}`);\r\n        return await data.json();\r\n    }\r\n    catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport async function getDataByUrl(url) {\r\n    try {\r\n        const data = await fetch(url);\r\n        return await data.json();\r\n    }\r\n    catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport async function getPokemonSpecies(id) {\r\n    try {\r\n        const data = await fetch(BaseURL + `pokemon-species/${id}`);\r\n        return await data.json();\r\n    }\r\n    catch (err) {\r\n        return err;\r\n    }\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport * as PokemonService from '../services/pokemon-service';\r\nexport const pokemonSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    pokemons: [],\r\n    selectedPokemon: null,\r\n    totalCount: 0,\r\n    page: 0,\r\n    size: 10,\r\n    isError: false,\r\n    error: null,\r\n    isLoading: false\r\n  },\r\n  reducers: {\r\n    addPokemons: (state, action) => {\r\n      state.pokemons = action.payload.pokemons;\r\n      state.totalCount = action.payload.totalCount;\r\n      state.page = action.payload.page;\r\n      state.size = action.payload.size;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.isLoading = action.payload.isLoading\r\n    },\r\n    setSelectedPokemon: (state, action) => {\r\n      state.selectedPokemon = action.payload.selectedPokemon\r\n    },\r\n    setError: (state, action) => {\r\n      state.isError = true;\r\n      state.error = action.payload.error;\r\n    },\r\n    setInilizeState: (state, action) => ({...action.payload.state})\r\n  },\r\n});\r\n\r\nexport const { addPokemons, decrement, incrementByAmount, setLoading, setSelectedPokemon, setError, setInilizeState } = pokemonSlice.actions;\r\n\r\n\r\n\r\nexport const getPokemons = (page = 0, size=10) => async (dispatch, getState) => {\r\n  try {\r\n    \r\n    const { pokemon } = getState();\r\n    if(page < pokemon.page) {\r\n      return;\r\n    }\r\n    dispatch(setLoading({isLoading: true}));\r\n    const pokemons = await PokemonService.getPokemons(page,size);\r\n    pokemons.results =  pokemons.results.map(\r\n      async (pokemon) => {\r\n        const temp = await PokemonService.getDataByUrl(pokemon.url);\r\n        return {\r\n          id: temp.id,\r\n          name: pokemon.name,\r\n          types: temp.types.map(x => x.type.name),\r\n          image: temp.sprites.other['official-artwork'].front_default\r\n          // image: temp.sprites.other['dream_world'].front_default\r\n          // image: temp.sprites.front_default\r\n        };\r\n      }\r\n    );\r\n    pokemons.results = await Promise.all(pokemons.results);\r\n    dispatch(addPokemons({pokemons: pokemon.pokemons.concat(pokemons.results), totalCount: pokemons.count, page,size}));\r\n    dispatch(setLoading({isLoading: false}));  \r\n    const current_state = getState();\r\n    localStorage.setItem('pokemon', JSON.stringify(current_state.pokemon));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nconst get_evolutions = (chain, chain_name=[], chain_level=[]) => {\r\n  if(!chain || !chain.evolves_to || chain.evolves_to.lenght === 0) {\r\n    return {\r\n      chain_name,\r\n      chain_level\r\n    }\r\n  }\r\n  if(chain && chain.evolution_details && chain.evolution_details.length > 0) {\r\n    chain_level.push(chain.evolution_details[0].min_level)\r\n  }\r\n  chain_name.push(chain.species.name);\r\n  return get_evolutions(chain.evolves_to[0], chain_name, chain_level)\r\n}\r\n\r\nconst map_evolution = (chain_name, chain_level) => {\r\n  let i=0, j=1, k=0;\r\n  const ans = [];\r\n  while(j < chain_name.length) {\r\n    let temp = {\r\n      to: {...chain_name[j]},\r\n      level: chain_level[k],\r\n      from: {...chain_name[i]}\r\n    }\r\n    i +=1;\r\n    j +=1;\r\n    k +=1;\r\n    ans.push(temp)\r\n  }\r\n  return ans;\r\n}\r\n\r\nconst createData = (pokemon, pokemonSpecies, moifie_evol_chain) => {\r\n  return {\r\n    name: pokemon.name,\r\n    stats: pokemon.stats.map(stat => ({name: stat.stat.name.replace('-', ' '), power: stat.base_stat})),\r\n    types: pokemon.types.map(type => type.type.name),\r\n    image: pokemon.sprites.other['official-artwork'].front_default,\r\n    weight: pokemon.weight,\r\n    height: pokemon.height,\r\n    id: pokemon.id,\r\n    abilities: pokemon.abilities.map(ability => ability.ability.name),\r\n    moves: pokemon.moves.map(move => move.move.name.replace('-', ' ')),\r\n    egg_groups: pokemonSpecies.egg_groups.map(egg_group => egg_group.name.replace('-', ' ')),\r\n    has_gender_differences: pokemonSpecies.has_gender_differences,\r\n    hatch_counter: pokemonSpecies.hatch_counter,\r\n    evolution_chain: moifie_evol_chain,\r\n    flavor_text_entries: Array.from(new Set(pokemonSpecies.flavor_text_entries.filter(x => x.language.name === 'en').map(x => x.flavor_text.replace('↵', ' ').replace('\f', ' '))))\r\n  };\r\n}\r\n\r\nexport const getSelectedPokemon = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading({isLoading: true}));\r\n    const pokemon = await PokemonService.getDataByUrl(PokemonService.BaseURL + `pokemon/${id}`);\r\n    const pokemonSpecies = await PokemonService.getPokemonSpecies(id);\r\n    const pokemonEvolutions = await PokemonService.getDataByUrl(pokemonSpecies.evolution_chain.url);\r\n    const evol_chain = get_evolutions(pokemonEvolutions.chain);\r\n    const data =  evol_chain.chain_name.map(async (x) => {\r\n      const y = await PokemonService.getDataByUrl(PokemonService.BaseURL + `pokemon/${x}`);\r\n      const image = y.sprites.other['official-artwork'].front_default\r\n      return {name: x, image, id: y.id}\r\n    });\r\n    const evol_maped_chain_name = await Promise.all(data)\r\n    const moifie_evol_chain = map_evolution(evol_maped_chain_name, evol_chain.chain_level);\r\n    const cretedPokemon = createData(pokemon, pokemonSpecies, moifie_evol_chain);\r\n    dispatch(setSelectedPokemon({selectedPokemon: cretedPokemon}));\r\n    dispatch(setLoading({isLoading: false}));\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(setLoading({isLoading: false}));\r\n    dispatch(setError({error: 'Error in finding Pokemon'}))\r\n  }\r\n}\r\n\r\n\r\nexport const selectedPokemon = state => state.pokemon.selectedPokemon;\r\nexport const isLoading = state => state.pokemon.isLoading;\r\nexport const pokemonError = state => ({isError: state.pokemon.isError, error: state.pokemon.error})\r\nexport default pokemonSlice.reducer;\r\n","import React, { Component } from 'react';\r\nimport Pokemon from './pokemon';\r\nimport { connect } from 'react-redux';\r\nimport { getPokemons, setInilizeState } from '../slices/pokemon-slices';\r\nimport './pokemon.css';\r\nimport { Link } from 'react-router-dom';  \r\n\r\nclass Pokemons extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            size: 12\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const pokemonsLocal = localStorage.getItem('pokemon');\r\n        \r\n        if(pokemonsLocal) {\r\n            const pokemons = JSON.parse(pokemonsLocal);\r\n            this.props.setPokemonInilizeState(pokemons)\r\n        }\r\n        else if(this.props.pokemons.length === 0) {\r\n            this.props.getPokemons(this.props.page,this.state.size);\r\n        }\r\n        \r\n    }\r\n\r\n    increasePage = () => {\r\n        this.props.getPokemons(this.props.page + 1, this.state.size);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                <h1 className=\"text-center my-3\">Pokemons {this.props.pokemons.length} / {this.props.totalCount} </h1>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <div className=\"row\">\r\n                    { this.props.pokemons.map((x, index) => (\r\n                        <div key={x.id} className=\"col-6 col-sm-6 col-md-4 my-2  d-flex justify-content-center\">\r\n                            <Link style={{width: '100%', textDecoration: 'none'}} to={`/pokemon-detail/${x.id}`}>\r\n                                <Pokemon name={x.name} id={x.id} image={x.image} types={x.types}/>\r\n                            </Link>\r\n                        </div>\r\n                    ))} \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 d-flex justify-content-center  my-3\">\r\n                    { this.props.isLoading ? <div className=\"lds-dual-ring\"></div> : <button className=\"btn btn-primary text-center\" onClick={this.increasePage}>Load More</button>}\r\n                </div>             \r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    pokemons: state.pokemon.pokemons,\r\n    totalCount: state.pokemon.totalCount,\r\n    page: state.pokemon.page,\r\n    isLoading: state.pokemon.isLoading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      getPokemons: (page, size) => dispatch(getPokemons(page, size)),\r\n      setPokemonInilizeState: (pokemons) => dispatch(setInilizeState({state: pokemons}))\r\n    }\r\n  }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemons) ;","import React, { Fragment } from 'react';\r\n\r\n\r\nconst BaseState = ({stats}) => (\r\n    <dl className=\"row pokemon-tab-info\">\r\n        {stats.map((stat, index) => {\r\n            return (\r\n                <Fragment key={index}>\r\n                    <dd className=\"col-4 text-capitalize\" >{stat.name}</dd>\r\n                    <dt className=\"col-2 \">{stat.power}</dt>\r\n                    <dd className=\"col-6 p-0 d-flex align-items-center\">\r\n                        <div className=\"progress-bar progressbar\" style={{ width: stat.power + '%', backgroundColor: stat.power >= 50 ? '#6dcc93' : '#fb7777' }}></div>\r\n                    </dd>\r\n                </Fragment>\r\n            )\r\n        })}\r\n    </dl>\r\n)\r\n\r\nexport default BaseState;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './pokemon-evolution-chain.css'\r\n\r\nfunction EvolvePokemon({ props }) {\r\n    return <Link style={{ width: '100%', textDecoration: 'none', color: 'inherit' }} to={`/pokemon-detail/${props.id}`}>\r\n        <img src={props.image} alt=\"\" width=\"80px\" />\r\n        <p className=\"text-capitalize pokemon-evolution-text\">{props.name}</p>\r\n    </Link>\r\n}\r\n\r\n\r\nfunction PokemonEvolutionChain({ evolution_chain }) {\r\n    if(evolution_chain.length === 0) {\r\n        return <div className=\"row mt-5\" >\r\n            <div className=\"col-12\">\r\n                <h1 className=\"text-center \" style={{color: 'rebeccapurple'}}>No Evolution Chain Found</h1>\r\n            </div>\r\n        </div>\r\n    }\r\n    return evolution_chain.map((x, index) => (\r\n        <div className=\"row mt-5\" key={index}>\r\n            <div className=\"col-4 text-center\">\r\n                <EvolvePokemon props={x.from} />\r\n            </div>\r\n            <div className=\"col-3 text-center d-flex justify-content-center align-items-center pokemon-evolution-text\"><span>Lvl {x.level}</span></div>\r\n            <div className=\"col-4 text-center\">\r\n                <div className=\"col text-center\">\r\n                    <EvolvePokemon props={x.to} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default PokemonEvolutionChain;","import React from 'react';\r\n\r\n\r\nfunction PokemonAbout({ pokemon }) {\r\n    return (\r\n        <div className=\"row my-3 justify-content-center\">\r\n            <div className=\"col-10\">\r\n                <h3 className=\"mt-5 mb-4 font-weight-bold\">About</h3>\r\n            </div>\r\n            <div className=\"col-10 col-sm-6 m-auto\">\r\n                <dl className=\"row pokemon-tab-info\">\r\n                    <dd className=\"col-4\">Height</dd>\r\n                    <dt className=\"col-8\">{(pokemon.height * 0.32808).toFixed(2)} ft ({pokemon.height * 10} cm)</dt>\r\n\r\n                    <dd className=\"col-4\">Weight</dd>\r\n                    <dt className=\"col-8\">{(pokemon.weight / 4.5359237).toFixed(2)} lbs ({pokemon.weight / 10} kg)</dt>\r\n\r\n                    <dd className=\"col-4\">Abilities</dd>\r\n                    <dt className=\"col-8 text-capitalize\">{pokemon.abilities.join(\", \")}</dt>\r\n\r\n                    <dd className=\"col-4\">Type</dd>\r\n                    <dt className=\"col-8 text-capitalize\">{pokemon.types.join(\", \")}</dt>\r\n\r\n                    <dd className=\"col-4\">Egg Groups</dd>\r\n                    <dt className=\"col-8 text-capitalize\">{pokemon.egg_groups.join(\", \")}</dt>\r\n                </dl>\r\n            </div>\r\n\r\n            <div className=\"col-10\">\r\n\r\n                <h3 className=\"mt-5 mb-4 font-weight-bold\">Flavor Text Entries</h3>\r\n                {\r\n                    pokemon.flavor_text_entries.map((x, i) => <div className=\"d-inline-flex\" key={i}>\r\n                        <p className=\"list-group-item\" >\r\n                            <span style={{ fontWeight: 'bold' }}>{i + 1} . </span> {x}\r\n                        </p>\r\n                    </div>)\r\n\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PokemonAbout;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { getSelectedPokemon, selectedPokemon, isLoading, pokemonError } from '../slices/pokemon-slices';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport './pokemon-detail.css';\r\nimport './pokemon.css';\r\n\r\nimport TypeColor from '../utils/typeColor';\r\nimport BaseState from '../components/base-state';\r\nimport PokemonEvolutionChain from '../components/pokemon-evolution-chain';\r\nimport PokemonAbout from '../components/pokemon-about';\r\n\r\n\r\nfunction PokemonDetail(props) {\r\n    const dispatch = useDispatch();\r\n    const [pokemonId, setPokeomId] = useState('1')\r\n    const pokemon = useSelector(selectedPokemon);\r\n    const isLoadingState = useSelector(isLoading);\r\n    const pokemonErrorSelector = useSelector(pokemonError);\r\n    useEffect(() => {\r\n        dispatch(getSelectedPokemon(props.match.params.id))\r\n        setPokeomId(props.match.params.id);\r\n    }, [props.match.params.id, dispatch]);\r\n\r\n    if (pokemonErrorSelector.isError) {\r\n        return (<div className=\"row\">\r\n            <div className=\"col-12 mt-5 text-center\">\r\n                <h1>{pokemonErrorSelector.error}</h1>\r\n            </div>\r\n        </div>);\r\n    }\r\n    if (isLoadingState) {\r\n        return (<div className=\"row\">\r\n            <div className=\"col-12 mt-5 text-center\">\r\n                <div className=\"lds-dual-ring\"></div>;\r\n                </div>\r\n        </div>);\r\n    }\r\n    if (!pokemon) {\r\n        return null;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid h-100\" style={{ background: TypeColor[pokemon.types[0]] }}>\r\n            <div className=\"row h-100\">\r\n                <div className=\"col-12 col-sm-10 col-sm-8 h-100 m-auto\">\r\n                    <div className=\"row h-100\">\r\n\r\n                        <div className=\"col-12\" style={{ height: '20%' }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <h1 className=\"pokemon-name pt-5 pl-5 text-capitalize\" style={{ color: 'white', fontSize: 'xxx-large' }}>{pokemon.name}</h1>\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                    <img \r\n                                    onClick = { () => props.history.push('/')}\r\n                                    src=\"https://findicons.com/files/icons/1580/devine_icons_part_2/128/home.png\" alt=\"\"\r\n                                        style={{\r\n                                            width: '40px',\r\n                                            filter: 'invert(1)',\r\n                                            paddingTop: '5rem',\r\n                                            cursor: 'pointer'\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                                        \r\n                        <div className=\"col-12 d-flex justify-content-center\" style={{ height: '20%', position: \"relative\" }}>\r\n                            <img className=\"img-fluid\" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemonId}.png`} alt=\"\" style={{ position: 'absolute', zIndex: 1, height: '200px', bottom: '-30%' }} />\r\n                        </div>\r\n\r\n                        <div className=\"col-12\" style={{ minHeight: '60%', background: 'white', borderTopLeftRadius: '25px', borderTopRightRadius: '25px' }}>\r\n                            <div className=\"pt-5\">\r\n                                <ul className=\"nav nav-tabs pokenav pt-5 justify-content-center row\">\r\n                                    <li className=\"active\"><a data-toggle=\"tab\" href=\"#about\">About</a></li>\r\n                                    <li><a data-toggle=\"tab\" href=\"#base-state\">Base State</a></li>\r\n                                    <li><a data-toggle=\"tab\" href=\"#evolution\">Evolution</a></li>\r\n                                    <li><a data-toggle=\"tab\" href=\"#moves\">Moves</a></li>\r\n                                </ul>\r\n\r\n                                <div className=\"tab-content\">\r\n                                    <div id=\"about\" className=\"tab-pane active\">\r\n                                        <PokemonAbout pokemon={pokemon} />\r\n\r\n                                    </div>\r\n                                    <div id=\"base-state\" className=\"tab-pane \">\r\n                                        <div className=\"row my-3 justify-content-center\">\r\n                                            <div className=\"col-10 col-sm-8 m-auto\">\r\n                                                <BaseState stats={pokemon.stats} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div id=\"evolution\" className=\"tab-pane \">\r\n                                        <div className=\"row my-3 justify-content-center\">\r\n                                            <div className=\"col-10 col-sm-6 m-auto\">\r\n                                                <h1>Evolution Chain</h1>\r\n                                                <PokemonEvolutionChain evolution_chain={pokemon.evolution_chain} />\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div id=\"moves\" className=\"tab-pane \">\r\n                                        <div className=\"row my-3 justify-content-center\">\r\n                                            <div className=\"col-10 m-auto text-center\">\r\n                                                {\r\n                                                    pokemon.moves.map((x, index) => <span key={index} className=\"badge badge-pill badge-dark m-2 p-3 text-capitalize\">{x}</span>)\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonDetail;","import React from 'react';\r\nimport Pokemons from './containers/pokemons';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport PokemonDetail from './containers/pokemon-detail';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/pokemon-detail/:id\" component={PokemonDetail} />\r\n        <Route path=\"/\" component={Pokemons} />\r\n      </Switch>\r\n    </Router>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport pokemonReducer from '../slices/pokemon-slices';\r\nexport default configureStore({\r\n  reducer: {\r\n    pokemon: pokemonReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}